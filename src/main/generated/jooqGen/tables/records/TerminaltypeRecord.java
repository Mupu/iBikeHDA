/*
 * This file is generated by jOOQ.
 */
package jooqGen.tables.records;


import javax.annotation.Generated;

import jooqGen.tables.Terminaltype;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TerminaltypeRecord extends UpdatableRecordImpl<TerminaltypeRecord> implements Record2<UInteger, String> {

    private static final long serialVersionUID = 1539047317;

    /**
     * Setter for <code>ibikehda.terminaltype.TerminalTypeID</code>.
     */
    public void setTerminaltypeid(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>ibikehda.terminaltype.TerminalTypeID</code>.
     */
    public UInteger getTerminaltypeid() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>ibikehda.terminaltype.Type</code>.
     */
    public void setType(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>ibikehda.terminaltype.Type</code>.
     */
    public String getType() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<UInteger, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<UInteger, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field1() {
        return Terminaltype.TERMINALTYPE.TERMINALTYPEID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Terminaltype.TERMINALTYPE.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component1() {
        return getTerminaltypeid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value1() {
        return getTerminaltypeid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TerminaltypeRecord value1(UInteger value) {
        setTerminaltypeid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TerminaltypeRecord value2(String value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TerminaltypeRecord values(UInteger value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TerminaltypeRecord
     */
    public TerminaltypeRecord() {
        super(Terminaltype.TERMINALTYPE);
    }

    /**
     * Create a detached, initialised TerminaltypeRecord
     */
    public TerminaltypeRecord(UInteger terminaltypeid, String type) {
        super(Terminaltype.TERMINALTYPE);

        set(0, terminaltypeid);
        set(1, type);
    }
}

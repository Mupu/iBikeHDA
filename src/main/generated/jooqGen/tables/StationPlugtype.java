/*
 * This file is generated by jOOQ.
 */
package jooqGen.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooqGen.Ibikehda;
import jooqGen.Indexes;
import jooqGen.Keys;
import jooqGen.tables.records.StationPlugtypeRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StationPlugtype extends TableImpl<StationPlugtypeRecord> {

    private static final long serialVersionUID = 1604922132;

    /**
     * The reference instance of <code>ibikehda.station_plugtype</code>
     */
    public static final StationPlugtype STATION_PLUGTYPE = new StationPlugtype();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StationPlugtypeRecord> getRecordType() {
        return StationPlugtypeRecord.class;
    }

    /**
     * The column <code>ibikehda.station_plugtype.StationID</code>.
     */
    public final TableField<StationPlugtypeRecord, UInteger> STATIONID = createField("StationID", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>ibikehda.station_plugtype.PlugTypeID</code>.
     */
    public final TableField<StationPlugtypeRecord, UInteger> PLUGTYPEID = createField("PlugTypeID", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * Create a <code>ibikehda.station_plugtype</code> table reference
     */
    public StationPlugtype() {
        this(DSL.name("station_plugtype"), null);
    }

    /**
     * Create an aliased <code>ibikehda.station_plugtype</code> table reference
     */
    public StationPlugtype(String alias) {
        this(DSL.name(alias), STATION_PLUGTYPE);
    }

    /**
     * Create an aliased <code>ibikehda.station_plugtype</code> table reference
     */
    public StationPlugtype(Name alias) {
        this(alias, STATION_PLUGTYPE);
    }

    private StationPlugtype(Name alias, Table<StationPlugtypeRecord> aliased) {
        this(alias, aliased, null);
    }

    private StationPlugtype(Name alias, Table<StationPlugtypeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> StationPlugtype(Table<O> child, ForeignKey<O, StationPlugtypeRecord> key) {
        super(child, key, STATION_PLUGTYPE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ibikehda.IBIKEHDA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.STATION_PLUGTYPE_PRIMARY, Indexes.STATION_PLUGTYPE_STATION_PLUGTYPE_PT_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<StationPlugtypeRecord> getPrimaryKey() {
        return Keys.KEY_STATION_PLUGTYPE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<StationPlugtypeRecord>> getKeys() {
        return Arrays.<UniqueKey<StationPlugtypeRecord>>asList(Keys.KEY_STATION_PLUGTYPE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<StationPlugtypeRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<StationPlugtypeRecord, ?>>asList(Keys.STATION_PLUGTYPE_S_FK, Keys.STATION_PLUGTYPE_PT_FK);
    }

    public Station station() {
        return new Station(this, Keys.STATION_PLUGTYPE_S_FK);
    }

    public Plugtype plugtype() {
        return new Plugtype(this, Keys.STATION_PLUGTYPE_PT_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StationPlugtype as(String alias) {
        return new StationPlugtype(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StationPlugtype as(Name alias) {
        return new StationPlugtype(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public StationPlugtype rename(String name) {
        return new StationPlugtype(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public StationPlugtype rename(Name name) {
        return new StationPlugtype(name, null);
    }
}
